apiVersion: v1
kind: Service
metadata:
  name: grafana
  labels:
    app: grafana
spec:
  type: NodePort
  ports:
    - port: 80
      targetPort: 3000
      name: grafana
  selector:
    app: grafana
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana-storage-claim
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: grafana
spec:
  replicas: 1
  serviceName: grafana
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
        - name: grafana
          image: grafana/grafana
          resources:
            requests:
              cpu: "10m"
              memory: "30Mi"
          env:
            - name: GF_SECURITY_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: grafana-secret
                  key: admin_password
            - name: GF_AUTH_GITHUB_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: grafana-secret
                  key: gh_client_id
            - name: GF_AUTH_GITHUB_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: grafana-secret
                  key: gh_secret
          envFrom:
            - configMapRef:
                name: grafana-config
          ports:
            - containerPort: 3000
              name: grafana
          volumeMounts:
            - mountPath: /var/lib/grafana
              name: grafana-storage
            #- mountPath: /etc/grafana/provisioning/datasources
            #  name: grafana-datasources
            #  readOnly: false
      initContainers:
        # https://www.digitalocean.com/docs/kubernetes/how-to/add-volumes/
        - name: grafana-data-permission-fix
          image: busybox
          command: ["/bin/chmod", "-R", "777", "/var/lib/grafana"]
          volumeMounts:
            - mountPath: /var/lib/grafana
              name: grafana-storage
      volumes:
        - name: grafana-storage
          persistentVolumeClaim:
            claimName: grafana-storage-claim
        #- name: grafana-datasources
        #  configMap:
        #    defaultMode: 420
        #    name: grafana-datasources
